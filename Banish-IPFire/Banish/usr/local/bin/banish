#!/bin/sh
#
# Banish 1.4.7 for IPCop 1.4.18+
# Banish IPTables script
# Version 1.4.7
#
# SID Solutions
# http://sidsolutions.net
# Copyright (c) 2005/07/10 Sid McLaurin 
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# $Id: rc.Banish,v 1.4.7 2008/03/18 14:08 Sid McLaurin
# Used for Banish firewall rules
#
# Ported to IPFire by Rob Brewer [ granturav8@gmail.com ] - 28/12/18
#

eval $(/usr/local/bin/readhash /var/ipfire/ppp/settings)
eval $(/usr/local/bin/readhash /var/ipfire/ethernet/settings)
IFACE=`/bin/cat /var/ipfire/red/iface 2> /dev/null | /usr/bin/tr -d '\012'`
if [ -f /var/ipfire/red/device ]; then
	DEVICE=`/bin/cat /var/ipfire/red/device 2> /dev/null | /usr/bin/tr -d '\012'`
fi
BANISHLIST="/var/ipfire/Banish/ip_Banishlist"
REMOVELIST="/var/ipfire/Banish/rm_Banishlist"
LOGGER="/usr/bin/logger -p daemon.info -t banish"

iptables_Banish() {
if [ "$IFACE" != "" ]; then
	if [ -f /var/ipfire/red/active ]; then
		BLACKIPS=$(grep -Ev "^#" $BANISHLIST)
		# Interface exists and it is active

		# Drop and log pings
		# Uncomment to block pings on Red interface
		#$LOGGER "Ping Banished on RED interface $IFACE."
		#/sbin/iptables -A CUSTOMINPUT -p icmp --icmp-type 8 -i $IFACE -j LOG --log-prefix "banish-ping "
		#/sbin/iptables -A CUSTOMINPUT -p icmp --icmp-type 8 -i $IFACE -j DROP

		$LOGGER "Adding Banished entries to DROP"
	
		# IP Blacklist
		for i in $BLACKIPS
			do
				# Check for MAC Address entries
				MAC=$(echo $i |grep "\:")
				
				# Check for Range entries
				RANGE=$(echo $i|grep "[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\-[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}")				

				if [ "$MAC" ]
					then
						# Add MAC Address entries rules
						/sbin/iptables -A CUSTOMINPUT -m mac --mac-source $i -j LOG --log-prefix "banish-input "
						/sbin/iptables -A CUSTOMINPUT -m mac --mac-source $i -j DROP
						/sbin/iptables -A CUSTOMFORWARD -m mac --mac-source $i -j LOG --log-prefix "banish-forward "
						/sbin/iptables -A CUSTOMFORWARD -m mac --mac-source $i -j DROP
										
					elif [ "$RANGE" ]
						then
							# Add IP Range entries rules
							/sbin/iptables -A CUSTOMINPUT -m iprange --src-range $i -j LOG --log-prefix "banish-input "
							/sbin/iptables -A CUSTOMINPUT -m iprange --src-range $i -j DROP
							/sbin/iptables -A CUSTOMFORWARD -m iprange --src-range $i -j LOG --log-prefix "banish-forward "
							/sbin/iptables -A CUSTOMFORWARD -m iprange --src-range $i -j DROP
							/sbin/iptables -A CUSTOMFORWARD -m iprange --dst-range $i -j LOG --log-prefix "banish-forward "
							/sbin/iptables -A CUSTOMFORWARD -m iprange --dst-range $i -j DROP
							/sbin/iptables -A CUSTOMOUTPUT -m iprange --dst-range $i -j LOG --log-prefix "banish-output "
							/sbin/iptables -A CUSTOMOUTPUT -m iprange --dst-range $i -j DROP
																				
							else
								# Add IP Address, CDIR and domain entries rules
								/sbin/iptables -A CUSTOMINPUT -s $i -j LOG --log-prefix "banish-input "
								/sbin/iptables -A CUSTOMINPUT -s $i -j DROP
								/sbin/iptables -A CUSTOMFORWARD -s $i -j LOG --log-prefix "banish-forward "
								/sbin/iptables -A CUSTOMFORWARD -s $i -j DROP
								/sbin/iptables -A CUSTOMFORWARD -d $i -j LOG --log-prefix "banish-forward "
								/sbin/iptables -A CUSTOMFORWARD -d $i -j DROP
								/sbin/iptables -A CUSTOMOUTPUT -d $i -j LOG --log-prefix "banish-output "
								/sbin/iptables -A CUSTOMOUTPUT -d $i -j DROP
				fi
			done

	else
		# Interface exists but not active, happens on a disconnect.
		$LOGGER "RED interface $IFACE exists but not active."
	fi
else
	$LOGGER "RED interface not defined yet."
fi
}

iptables_rmBanish() {
if [ "$IFACE" != "" ]; then
	if [ -f /var/ipfire/red/active ]; then
		REMOVEIPS=$(grep -Ev "^#" $REMOVELIST)
		# Interface exists and it is active

		# Undrop and unlog pings
		# Uncomment to unblock pings on Red interface
		#$LOGGER "Ping unBanished on RED interface $IFACE."
		#/sbin/iptables -D CUSTOMINPUT -p icmp --icmp-type 8 -i $IFACE -j LOG --log-prefix "banish-ping "
		#/sbin/iptables -D CUSTOMINPUT -p icmp --icmp-type 8 -i $IFACE -j DROP

		$LOGGER "Removing Banished entries"
	
		# Banish Remove List
		for i in $REMOVEIPS
			do
				# Check for MAC Address entries
				MAC=$(echo $i |grep "\:")
			
				# Check for Range entries
				RANGE=$(echo $i|grep "[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\-[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}")
				
				if [ "$MAC" ]
					then
						# Remove MAC Address entries rules
						/sbin/iptables -D CUSTOMINPUT -m mac --mac-source $i -j LOG --log-prefix "banish-input "
						/sbin/iptables -D CUSTOMINPUT -m mac --mac-source $i -j DROP
						/sbin/iptables -D CUSTOMFORWARD -m mac --mac-source $i -j LOG --log-prefix "banish-forward "
						/sbin/iptables -D CUSTOMFORWARD -m mac --mac-source $i -j DROP
					
					elif [ "$RANGE" ]
						then
							# Add IP Range entries rules
							/sbin/iptables -D CUSTOMINPUT -m iprange --src-range $i -j LOG --log-prefix "banish-input "
							/sbin/iptables -D CUSTOMINPUT -m iprange --src-range $i -j DROP
							/sbin/iptables -D CUSTOMFORWARD -m iprange --src-range $i -j LOG --log-prefix "banish-forward "
							/sbin/iptables -D CUSTOMFORWARD -m iprange --src-range $i -j DROP
							/sbin/iptables -D CUSTOMFORWARD -m iprange --dst-range $i -j LOG --log-prefix "banish-forward "
							/sbin/iptables -D CUSTOMFORWARD -m iprange --dst-range $i -j DROP
							/sbin/iptables -D CUSTOMOUTPUT -m iprange --dst-range $i -j LOG --log-prefix "banish-output "
							/sbin/iptables -D CUSTOMOUTPUT -m iprange --dst-range $i -j DROP

							else
								# Remove IP Address, CDIR and domain entries rules
								/sbin/iptables -D CUSTOMINPUT -s $i -j LOG --log-prefix "banish-input "
								/sbin/iptables -D CUSTOMINPUT -s $i -j DROP
								/sbin/iptables -D CUSTOMFORWARD -s $i -j LOG --log-prefix "banish-forward "
								/sbin/iptables -D CUSTOMFORWARD -s $i -j DROP
								/sbin/iptables -D CUSTOMFORWARD -d $i -j LOG --log-prefix "banish-forward "
								/sbin/iptables -D CUSTOMFORWARD -d $i -j DROP
								/sbin/iptables -D CUSTOMOUTPUT -d $i -j LOG --log-prefix "banish-output "
								/sbin/iptables -D CUSTOMOUTPUT -d $i -j DROP
				fi
			done

	else
		# Interface exists but not active, happens on a disconnect.
		$LOGGER "RED interface $IFACE exists but not active."
	fi
else
	$LOGGER "RED interface not defined yet."
fi
}

# See how we were called.
case "$1" in
  start)
        $LOGGER "Load Banish rules"
        iptables_Banish
		;;
  stop)
        $LOGGER "Remove Banish rules"
        iptables_rmBanish
	    ;;
  reload)
        $0 stop
        $0 start
        ;;
  *)
        echo "Usage: $0 {start|stop|reload}"
        ;;
esac
